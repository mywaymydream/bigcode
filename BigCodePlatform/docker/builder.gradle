

ext {
    dockerApplicationName = 'bigcode-builder'
    dockerFile = "${project.rootDir}/builder.Dockerfile"
    dockerImageName = dockerApplicationName
    dockerContainerName = dockerImageName  
    dockerContainerHostName = dockerContainerName
    projectHostDirectory = project.rootDir.parentFile
    projectWorkspaceDirectory = '/home/builder/workspace'
    
    
}


task info() {
    doLast {
        println "Docker Image: $dockerImageName"
        println "Docker Container: $dockerContainerName"     
        println "Project directory: $projectHostDirectory"  
        println "Workspace directory: $projectWorkspaceDirectory"
        println "Dockerfile: $dockerFile" 
    }
}

task showAllContainers(type:Exec) {
    commandLine 'docker', 'container', 'ls', '-a'
}

task buildImage(type:Exec) {
    commandLine 'docker', 'build', "${project.rootDir}", '-f', "$dockerFile", "--tag=$dockerImageName" 
}

task createContainer(type:Exec) {
    commandLine 'docker', 
                 'create', 
                 '--volume', "$projectHostDirectory:$projectWorkspaceDirectory",
                 '--name', "$dockerContainerName",
                 '--hostname', "$dockerContainerHostName",
                 '--tty',
                 '--interactive',
                 "$dockerImageName"
}

task startContainer(type:Exec) {
    commandLine 'docker',
                'start',
                "$dockerContainerName"
}

task stopContainer(type:Exec) {
    commandLine 'docker',
                'stop',
                "$dockerContainerName"
}

task removeContainer(type:Exec) {
    commandLine 'docker', 'container', 'rm', "$dockerContainerName"
    ignoreExitValue true
}

task removeImage(type:Exec) {
    dependsOn 'removeContainer'
    commandLine 'docker', 'image', 'rm', "$dockerImageName"
    ignoreExitValue true
}


task buildInContainer(type:Exec) {
    commandLine 'docker', 'exec', '-i', "$dockerContainerName", './gradlew', 'build', '--console=plain'
}

task clean() {
    dependsOn 'removeImage'
}
